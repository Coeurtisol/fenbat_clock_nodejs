// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Entite {
  id        Int        @id @default(autoincrement())
  name      String
  Users     User[]
  affaires  Affaire[]
  pointages Pointage[]
}

model EtatAffaire {
  id   Int    @id @default(autoincrement())
  name String
}

model TypeAffaire {
  id       Int       @id @default(autoincrement())
  name     String
  affaires Affaire[]
}

model SecteurAffaire {
  id       Int       @id @default(autoincrement())
  name     String
  affaires Affaire[]
}

model Affaire {
  id               Int            @id @default(autoincrement())
  name             String
  secteurAffaire   SecteurAffaire @relation(fields: [secteurAffaireId], references: [id])
  secteurAffaireId Int
  typeAffaire      TypeAffaire    @relation(fields: [typeAffaireId], references: [id])
  typeAffaireId    Int
  etat             String
  entite           Entite         @relation(fields: [entiteId], references: [id])
  entiteId         Int
  pointages        Pointage[]
  commandes        Commande[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model User {
  id         Int        @id @default(autoincrement())
  firstname  String
  lastname   String
  accessCode String
  status     Boolean    @default(true)
  pointages  Pointage[]
  semaines   Semaine[]
  entite     Entite?    @relation(fields: [entiteId], references: [id])
  entiteId   Int?
  commandes  Commande[]
  role       Role       @relation(fields: [roleId], references: [id])
  roleId     Int
}

model Pointage {
  id             Int           @id @default(autoincrement())
  hour           Float
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  motifAbsence   MotifAbsence? @relation(fields: [motifAbsenceId], references: [id])
  motifAbsenceId Int?
  affaire        Affaire       @relation(fields: [affaireId], references: [id])
  affaireId      Int
  entite         Entite        @relation(fields: [entiteId], references: [id])
  entiteId       Int
  semaine        Semaine       @relation(fields: [semaineId], references: [id])
  semaineId      Int
  panier         Boolean       @default(false)
}

model MotifAbsence {
  id        Int        @id @default(autoincrement())
  name      String
  pointages Pointage[]
}

model Semaine {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  etatSemaine   EtatSemaine @relation(fields: [etatSemaineId], references: [id])
  etatSemaineId Int
  pointages     Pointage[]
  commentaire   String      @db.Text
}

model EtatSemaine {
  id       Int       @id @default(autoincrement())
  name     String
  semaines Semaine[]
}

model Commande {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  article       Article     @relation(fields: [articleId], references: [id])
  articleId     Int
  fournisseur   Fournisseur @relation(fields: [fournisseurId], references: [id])
  fournisseurId Int
  quantite      Int
  etat          Boolean
  affaire       Affaire?    @relation(fields: [affaireId], references: [id])
  affaireId     Int?
}

model Article {
  id           Int           @id @default(autoincrement())
  name         String
  categorie    Category?      @relation(fields: [categorieId], references: [id])
  categorieId  Int?
  Commandes    Commande[]
  fournisseurs Fournisseur[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  articles Article[]
}

model Fournisseur {
  id        Int        @id @default(autoincrement())
  name      String
  articles  Article[]
  commandes Commande[]
}
